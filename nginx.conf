worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  4096;
    use epoll;
    multi_accept on;
}

http {
    include       mime.types;
    default_type  text/html;

    proxy_cache_path  /tmp/cache  levels=1:2 keys_zone=STATIC:10m inactive=24h max_size=300m;

    map $host $request_uuid {
      default null;
    }

    log_format  main    '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log main;

    sendfile        on;
    keepalive_timeout  65;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    resolver 127.0.0.11 valid=5s ipv6=off;

    server {
        listen 80;
        listen 81 http2 proxy_protocol;

        client_max_body_size 32m;

        root /usr/local/app/public;

        set $request_uuid $http_x_request_id;
        add_header X-Request-Id $request_uuid always;

        set_real_ip_from 0.0.0.0;
        real_ip_header X-Forwarded-For;


        location / {
            if ($request_method ~* "(GET|POST|PUT|DELETE)") {
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header "Access-Control-Allow-Origin"  "*";
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept, Id";
                add_header "Access-Control-Expose-Headers" "Content-Length,Content-Range,Id";
            }

            # Preflighted requests
            if ($request_method = OPTIONS ) {
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header "Access-Control-Allow-Origin"  "*";
                add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD, DELETE, PUT";
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept, Id";
                add_header "Access-Control-Expose-Headers" "Content-Length,Content-Range,Id";
                return 200;
            }

            set $backend_server %BACKEND_HOST%;

            proxy_pass             http://$backend_server;
            proxy_pass_request_headers on;
            proxy_set_header       Host $host;
            proxy_buffering        on;
            proxy_cache            STATIC;
            proxy_cache_valid      200 404 1d;
            proxy_cache_valid      any 1m;
            proxy_cache_use_stale  error timeout invalid_header updating http_404 http_500 http_502 http_503 http_504;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
        }
    }
}
